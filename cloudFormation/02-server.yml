Description: EC2 & ASG setup for FTP server

Parameters:
  # inject in the latest AMI
  Linux2Ami:
    Type: String
  # used to open up ssh port
  myIpAddress:
    Type: String
  UserDataScript:
    Type: String
  spotInstancePrice:
    Type: String
    Default: "0.015"
  stackName:
    Type: String
  instanceType:
    Type: String
    Default: t3.medium

Resources:
  # which ports open on this box
 
  FtpLauchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      # IamInstanceProfile: !Ref CsServerInstanceProfile
      ImageId: !Sub ${Linux2Ami}
      InstanceMonitoring: false
      InstanceType: !Sub ${instanceType} 
      AssociatePublicIpAddress: true
      SpotPrice: !Sub "${spotInstancePrice}"
      SecurityGroups: 
        - !Ref FtpSecurityGroup
      UserData:
        Fn::Base64: !Ref UserDataScript

  FtpSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: SG for cs server
      GroupName: cs-server-sg
      SecurityGroupIngress:
        - Description: SSH from my current ip
          IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Sub "${myIpAddress}"
        - Description: Web from my current ip for testing
          IpProtocol: tcp
          FromPort: 80
          ToPort: 21
          CidrIp: !Sub "${myIpAddress}"
     
      VpcId:
        Fn::ImportValue: !Sub "${stackName}-vpc"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-sg"

  # toggle the min and max size to have instances deployed
  FtpServerAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AvailabilityZones: 
        - eu-west-1a
      HealthCheckGracePeriod: 10
      HealthCheckType: EC2
      LaunchConfigurationName: !Ref FtpLauchConfig
      MaxSize: "1"
      MinSize: "1"
      TerminationPolicies: 
        - OldestInstance
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ASG"
          PropagateAtLaunch: true
      VPCZoneIdentifier:
        - Fn::ImportValue: !Sub "${stackName}-net-pub-subnet-a"

# Exporting outputs to use in downstream stacks
Outputs:
  StackName:
    Value: !Ref AWS::StackName
